% Generierung von schwebenden Plattformen
% Es wird eine Menge von Plattformen generiert, so dass dem Spieler ein Weg vom angegeben Start- zum Zielpunkt ermöglicht wird.
% Sie koennen bei der Generierung unterschiedliche Ausbreitungen, die Positionen und Richtungen (vertical) sind hingegen festgelegt. Es ist auch einfach moeglich, es auf horizontale Bewegungen 
% Es wird anschliessend ueberprueft, ob ein Weg vom Start zum Ziel vorhanden ist (ueber Nachbarschaftsbeziehungen). Dabei werden Toleranzbereiche (für Spruenge) genutzt.
%



% Start und Zielpunkte koennen als Parameter uebergeben werden.
#const startx=2.
#const starty=40.
#const destx=19.
#const desty=2.

#const width=20.
#const height=40.

#const ausbreitung=6.

block(1..width,1..height).
length(2..ausbreitung).
dir(1;0).
ten(1..100).

num1(T*2) :- ten(T).
num(T) :- num1(T), startx<=T, T<=destx.


#show num/1.
num2(11..20).

start(startx,starty).
dest(destx,desty).


% Erreichbarkeit des Ziels
reachable(ID) :- dest(DX,DY), lineblock(X,Y,ID), DX+A=X, DY+B=Y, abs(A;B).
reachable(ID) :- lineblock(DX,DY,ID), lineblock(X,Y,ID1), DX+A=X, DY+B=Y, abs(A;B), reachable(ID1).
reachable(start) :- start(DX,DY), lineblock(X,Y,ID1), DX+A=X, DY+B=Y, abs(A;B), reachable(ID1).
abs(-1..2).

:- not reachable(start).

plength(ID,L) :- line(X,Y,L,1,ID).
:- plength(ID1,L), plength(ID2,L), ID1=ID2+2.




 
 % Generierung der Plattformen
1{ line(ID,Y,L,1,ID) : block(X,Y), block(ID,Y), length(L)}1 :- num(ID).

% Benachbarte mit unterschiedlicher Ausbreitung, damit sie jeweils erreichbar sind (verhinderung paralleler Bewegungen, die einen Übergang zwischen zwei benachbarten Plattformen verhindern koennten)
:- line(X,_,L,1,ID), line(X1,_,L1,1,ID), X=X1+1, L = L1.

% Bewegungsausbreitung der Plattformen als Bloecke
lineblock(X,Y1,ID) :- line(X,Y,L,1,ID), block(X,Y), Y<=Y1, Y1<=Y+L, block(X,Y1).

#show line/5.


platform(X,Y,1,L,1) :- line(X,Y,L,1,ID).
#show platform/5.
