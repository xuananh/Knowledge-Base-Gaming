#show free/2.
%#show freeblock/2.
#show schuss/2.

#const width = 30.
#const sprunghoehe = 4.

blockall(1..width, 1..sprunghoehe).
block(1..width, 1 .. sprunghoehe-1).



start(1,1).
end(width,1).

w(1..width).

neighbor(X,1,X+1,1) :- w(X),w(X+1).
neighbor(X,1,X+1,2) :- w(X),w(X+1).
neighbor(X,2,X+1,3) :- w(X),w(X+1).
neighbor(X,3,X+1,3) :- w(X),w(X+1).
neighbor(X,3,X+1,2) :- w(X),w(X+1).
neighbor(X,2,X+1,1) :- w(X),w(X+1).
neighbor(X,2,X+1,2) :- w(X),w(X+1).

:- not free(X,Y), start(X,Y).
:- not free(X,Y), end(X,Y).

1{free(X,Y) : block(X,Y)}1 :- w(X).

:- free(X,Y), free(X+1, Y1), not neighbor(X,Y,X+1,Y1).
:- free(X,3), free(X-1,2), free(X-2,3).
:- free(X,2), free(X-1,2), free(X-2,3).
:- free(X,3), free(X-1,3), free(X-2,3).
:- free(X-2,1), free(X-1,2), not free(X,(2;3)).
:- free(X-2,2), free(X-1,2), not free(X,1).


freeblock(X,Y)     :- free(X,Y).
freeblock(X,Y+1)   :- free(X,Y).
freeblock(X+1,Y)   :- free(X,Y).
freeblock(X+1,Y+1) :- free(X,Y).
schussblock(X,Y) :- blockall(X,Y), not freeblock(X,Y).



% jeder Block kann bis zu 4 Schuesse enthalten.
vier(1..4).
1{ schuss(X*FX,Y*FY) : vier(FY), vier(FX) }4 :- schussblock(X,Y).

